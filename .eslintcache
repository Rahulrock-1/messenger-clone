[{"/home/rahul/Desktop/react/messenger-clone/src/index.js":"1","/home/rahul/Desktop/react/messenger-clone/src/App.js":"2","/home/rahul/Desktop/react/messenger-clone/src/reportWebVitals.js":"3","/home/rahul/Desktop/react/messenger-clone/src/Message.js":"4","/home/rahul/Desktop/react/messenger-clone/src/firebase.js":"5"},{"size":500,"mtime":1610689488802,"results":"6","hashOfConfig":"7"},{"size":2021,"mtime":1610983620877,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610689488802,"results":"9","hashOfConfig":"7"},{"size":844,"mtime":1610983523675,"results":"10","hashOfConfig":"7"},{"size":467,"mtime":1610943951487,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1fpcu9n",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/rahul/Desktop/react/messenger-clone/src/index.js",[],["24","25"],"/home/rahul/Desktop/react/messenger-clone/src/App.js",["26","27","28"],"import  React, { useEffect, useState } from 'react';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    });\n  }, [] )\n\n  useEffect(() => {\n    //const name = prompt('Please enter your name');\n    setUsername(prompt('Please enter your Name'));\n  }, [])\n\n  console.log(input);\n  console.log(messages);\n\n  const sendMessage =(event )=> {\n    event.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp:firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\"/>\n     <h1>Messenger</h1>\n     <h2>Welcome {username}</h2>\n     \n     <form className=\"app__form\">\n     <FormControl className=\"app__formControl\">\n        <Input className=\"app__Input\" placeholder='Enter a message' value={input} onChange={event=> setInput(event.target.value)}/>\n       <IconButton className=\"app__iconButton\" disabled= {!input} variant=\"contained\" type='submit' color='primary' onClick={sendMessage}>\n       <SendIcon />\n       </IconButton>\n      </FormControl>\n     </form>\n     <FlipMove>\n      {\n        messages.map(({id,message}) => (\n        <Message key={id} username={username} message={message} />\n          ))\n      }\n     </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","/home/rahul/Desktop/react/messenger-clone/src/reportWebVitals.js",[],"/home/rahul/Desktop/react/messenger-clone/src/Message.js",[],"/home/rahul/Desktop/react/messenger-clone/src/firebase.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":16},{"ruleId":"33","severity":1,"message":"37","line":2,"column":38,"nodeType":"35","messageId":"36","endLine":2,"endColumn":48},{"ruleId":"38","severity":1,"message":"39","line":45,"column":7,"nodeType":"40","endLine":45,"endColumn":110},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]